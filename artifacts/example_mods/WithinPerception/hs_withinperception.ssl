/*
   Example engine algorithm.
*/

#include "define_lite.h"
#include "command_lite.h"

#include "sfall.h"
#include "define_extra.h"

procedure start;
procedure can_see(variable obj1, variable obj2);

procedure start begin
   if not(init_hook) then begin

      variable source := get_sfall_arg,
               target := get_sfall_arg,
               engine := get_sfall_arg,
               type   := get_sfall_arg,  /* new arg */
               result := 0,
               seeDistance;

      if target then begin
         seeDistance := get_critter_stat(source, STAT_pe);

         if can_see(source, target) then begin
            seeDistance *= 5;
            if (get_flags(target) bwand FLAG_TRANSGLASS) then seeDistance /= 2;
         end
         else if combat_is_initialized then seeDistance *= 2;

         if target == dude_obj then begin
            if sneak_success then begin
               seeDistance /= 4;
               if has_skill(target, SKILL_SNEAK) > 120 then seeDistance -= 1;
            end
            else if dude_is_sneaking then seeDistance := (seeDistance * 2) / 3; // distance div 1.5
         end

         variable distance := tile_distance_objs(source, target);
         if (get_flags(source) bwand FLAG_MULTIHEX) then distance--;
         if (get_flags(target) bwand FLAG_MULTIHEX) then distance--;

         if (distance <= seeDistance) then result := 1;

         variable seeText = " he does not see > ";
         if (result) then seeText = " does he see > ";

         // Example
         display_msg("hs_withinperception: " + obj_name(source) + seeText + obj_name(target) + " [engine: " + engine + " script: " + result + "]");

         /* override engine result */
         //set_sfall_return(result);
      end
   end
end

procedure can_see(variable obj1, variable obj2) begin
   variable dir = obj_get_rot(obj1) - rotation_to_tile(tile_num(obj1), tile_num(obj2));
   if (dir < 0) then dir = -dir;
   return (dir <= 1) orElse (dir == 5);
end